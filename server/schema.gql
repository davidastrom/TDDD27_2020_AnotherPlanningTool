# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The Board model"""
type Board {
  _id: ID!
  lists: [List!]!
  members: [User!]!
  name: String!
  team: Team
}

input BoardInput {
  name: String!
}

"""The List model. Submodel for Board"""
type List {
  _id: ID!
  items: [Task!]!
  name: String!
}

input ListInput {
  boardId: ID!
  name: String!
}

type Mutation {
  addBoardMember(boardId: ObjectId!, userId: ObjectId!): Board!
  addList(list: ListInput!): List!
  addTask(task: TaskInput!): Board!
  addTeamMember(teamId: ObjectId!, userId: ObjectId!): Team!
  assignUser(boardId: ObjectId!, listId: ObjectId!, taskId: ObjectId!, userId: ObjectId!): Task!
  createBoard(board: BoardInput!, teamId: ObjectId): Board!
  createTeam(data: TeamInput!): Team!
  createUser(user: UserInput!): User!
  moveList(boardId: ObjectId!, index: Int!, listId: ObjectId!): Board!
  moveTask(boardId: ObjectId!, goalListId: ObjectId!, index: Int!, startListId: ObjectId!, taskId: ObjectId!): Board!
  removeBoardMember(boardId: ObjectId!, userId: ObjectId!): Board!
  removeTeamMember(teamId: ObjectId!, userId: ObjectId!): Team!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  allUsers: [User!]!
  board(boardId: ObjectId!): Board!
  currentUser: User!
  team(teamId: ObjectId!): Team!
  user(userId: ObjectId!): User!
}

"""The Task model. Submodel of List"""
type Task {
  _id: ID!
  assigned: [User!]!
  description: String
  title: String!
}

input TaskInput {
  boardId: ID!
  description: String
  listId: ID!
  title: String!
}

"""The Team model"""
type Team {
  _id: ID!
  boards: [Board!]!
  members: [User!]!
  name: String!
}

input TeamInput {
  name: String!
}

"""The User model"""
type User {
  _id: ID!
  boards: [Board!]!
  email: String!
  picture: String
  teams: [Team!]!
  username: String!
}

input UserInput {
  email: String!
}
